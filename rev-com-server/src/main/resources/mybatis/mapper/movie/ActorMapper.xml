<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.codergb.mapper.movie.ActorMapper">
  <insert id="createActor">
    insert into actor(id,name,foreignName,alias,constellation,birth,birthPlace,family,description)
    values(#{id},#{name},#{foreignName},#{alias},#{constellation},#{birth},#{birthPlace},#{family},#{description})
  </insert>
  <resultMap id="actorResultMap" type="Actor">
    <id property="id" column="id"></id>
    <result property="name" column="name"></result>
    <result property="avatarUrl" column="avatarUrl"></result>
    <result property="foreignName" column="foreignName"></result>
    <result property="alias" column="alias"></result>
    <result property="constellation" column="constellation"></result>
    <result property="birth" column="birth"></result>
    <result property="birthPlace" column="birthPlace"></result>
    <result property="family" column="family"></result>
    <result property="description" column="description"></result>
    <result property="createTime" column="createTime"></result>
    <result property="updateTime" column="updateTime"></result>
    <result property="originalname" column="originalname"></result>
    <result property="dest" column="dest"></result>
    <result property="filename" column="filename"></result>
    <result property="mimetype" column="mimetype"></result>
    <result property="size" column="size"></result>
    <collection property="occupations"
                ofType="Occupation"
                select="com.codergb.mapper.movie.OccupationMapper.getOccupationById"
                column="{id=id,key=aId}">

    </collection>
  </resultMap>
  <select id="getAllActor" resultMap="actorResultMap">
    select *,"aId" as aId from actor
    <where>
      <if test="keyword!='' and keyword!=null">
        name like "%"#{keyword}"%"
      </if>
    </where>
  </select>
  <update id="updateActor">
    update actor set name=#{name},foreignName=#{foreignName},alias=#{alias},constellation=#{constellation},
                     birth=#{birth},birthPlace=#{birthPlace},family=#{family},description=#{description}
    where id=#{id}
  </update>
  <delete id="deleteActor">
    delete from actor where id=#{id}
  </delete>
  <update id="uploadAvatar">
    update actor set avatarUrl=#{avatarUrl},originalname=#{originalname},mimetype=#{mimetype},
                     filename=#{filename},dest=#{dest},size=#{size}
    where id=#{id}
  </update>
  <select id="getActorById" resultType="Actor">
    select * from actor where id=#{id}
  </select>
  <!--获取导演合作演员-->
  <select id="getDirectorActor" resultMap="actorResultMap">
    select DISTINCT(a.id),a.name,a.avatarUrl,a.foreignName,a.alias,a.constellation,a.birth,a.birthPlace,
                   a.family,a.description,a.createTime,a.updateTime,a.originalname,a.mimetype,a.dest,a.filename,a.size,"aId" as aId
    from director as d
           LEFT JOIN movie_director as md on md.dId=d.id
           LEFT JOIN movie as m on m.id=md.mId
           LEFT JOIN movie_actor as ma on ma.mId=m.id
           LEFT JOIN actor as a on a.id=ma.aId
    where d.id=#{dId}
  </select>
  <select id="getActorCooperate" resultMap="actorResultMap">
    select DISTINCT(ac.id),ac.name,ac.avatarUrl,ac.foreignName,ac.alias,ac.constellation,
                   ac.birth,ac.birthPlace,ac.family,ac.description,ac.createTime,ac.updateTime,
                   ac.originalname,ac.mimetype,ac.dest,ac.filename,ac.size,"aId" as aId
    from actor as a
           left join movie_actor as ma on a.id=ma.aId
           LEFT JOIN movie as m on m.id=ma.mId
           LEFT JOIN movie_actor as mac on mac.mId=m.id
           LEFT JOIN actor as ac on ac.id=mac.aId
    where a.id=#{aId} and ac.id!=a.id
  </select>
</mapper>